// Code generated by mockery v2.52.2. DO NOT EDIT.

package cmocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Drainable is an autogenerated mock type for the Drainable type
type Drainable struct {
	mock.Mock
}

// Drain provides a mock function with given fields: _a0
func (_m *Drainable) Drain(_a0 context.Context) {
	_m.Called(_a0)
}

// NewDrainable creates a new instance of Drainable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDrainable(t interface {
	mock.TestingT
	Cleanup(func())
}) *Drainable {
	mock := &Drainable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
